{"version":3,"sources":["components/Dialogs/Chat/Messages_items/messagesItems.module.css","components/Dialogs/Dialogs.module.css","../node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js","../node_modules/@ant-design/icons/es/icons/SearchOutlined.js","components/Dialogs/Chat/Dialogs_items/dialogsItems.tsx","components/Dialogs/Chat/Dialogs_items/DialogsItemsContainer.tsx","components/hoc/withAuthRedirect.tsx","../node_modules/@ant-design/icons-svg/es/asn/SendOutlined.js","../node_modules/@ant-design/icons/es/icons/SendOutlined.js","components/Dialogs/Chat/Messages_items/AddMessageForm/AddMessageForm.tsx","../node_modules/@ant-design/icons-svg/es/asn/SmileOutlined.js","../node_modules/@ant-design/icons/es/icons/SmileOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/MessageOutlined.js","../node_modules/@ant-design/icons/es/icons/MessageOutlined.js","components/Dialogs/Chat/Messages_items/messagesItems.tsx","components/Dialogs/Chat/Messages_items/MessagesItemsContainer.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","SearchOutlined","props","ref","React","AntdIcon","Object","assign","icon","SearchOutlinedSvg","displayName","DialogsItems","profile","PublicChannels","active","setActiveListMessages","setActiveShowListMessages","ArrPublicChannels","map","d","to","id","className","onClick","src","alt","name","worked","timeHouse","timeMin","e","stopPropagation","photos","large","photo","fullName","lookingForAJobDescription","CloseOutlined","style","fontSize","color","type","placeholder","connect","state","dialogsPage","postPage","activeListMessages","actions","dialogsItems","mapStateToPropsForRedirect","isAuth","auth","SendOutlined","SendOutlinedSvg","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","s","footerForm","footerInput","createField","required","Input","footerSendButton","SmileOutlined","SmileOutlinedSvg","MessageOutlined","MessageOutlinedSvg","MessagesItems","messages","dialogsIcons","addSendActionCreator","SetActiveShowList","userId","useParams","useState","user","setUser","userSelect","find","item","useEffect","Chat","m","cn","messageLeft","messageRight","messageLeftColor","messageRightColor","message","time","arrHeaderIcons","i","message_header_Icon","messageHeader","messageHeader__avatarName","message_burger","AlignRightOutlined","messageHeader__avatar","messageHeader__name","message_header_icons","messageContent","messageFooter","footerIcons","values","newMessageBody","messagesEmpty","messagesEmptyBlock","compose","WrappedComponent","restProps","Dialogs","dialogs","DialogsItemsContainer","MessagesItemsContainer"],"mappings":"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","file":"static/js/3.ead15a18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"messagesItems_messages__22pwJ\",\"messagesEmpty\":\"messagesItems_messagesEmpty__2bHMk\",\"messagesEmptyBlock\":\"messagesItems_messagesEmptyBlock__s1XYz\",\"messageHeader\":\"messagesItems_messageHeader__1I-JZ\",\"messageHeader__burger\":\"messagesItems_messageHeader__burger__3Xuad\",\"messageHeader__avatarName\":\"messagesItems_messageHeader__avatarName__17XWB\",\"messageHeader__avatar\":\"messagesItems_messageHeader__avatar__2dqO7\",\"messageHeader__name\":\"messagesItems_messageHeader__name__2BtCX\",\"message_header_icons\":\"messagesItems_message_header_icons__2X_00\",\"message_header_Icon\":\"messagesItems_message_header_Icon__1P0ia\",\"messageContent\":\"messagesItems_messageContent__2ZRkq\",\"messageRightColor\":\"messagesItems_messageRightColor__3rqPg\",\"messageRight\":\"messagesItems_messageRight__96kSU\",\"messageLeftColor\":\"messagesItems_messageLeftColor__1jfz5\",\"messageLeft\":\"messagesItems_messageLeft__3bft5\",\"messageFooter\":\"messagesItems_messageFooter__1ES3h\",\"footerIcons\":\"messagesItems_footerIcons__2exOX\",\"footerForm\":\"messagesItems_footerForm__2pySV\",\"footerInput\":\"messagesItems_footerInput__Or01P\",\"footerSendButton\":\"messagesItems_footerSendButton__2PAxI\",\"container\":\"messagesItems_container__19JVk\",\"message_burger\":\"messagesItems_message_burger__It4kH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2tTlZ\",\"container\":\"Dialogs_container__2EO0l\"};","// This icon file is generated automatically.\nvar SearchOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nexport default SearchOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\n\nSearchOutlined.displayName = 'SearchOutlined';\nexport default /*#__PURE__*/React.forwardRef(SearchOutlined);","import React, {FC, useEffect, useState} from \"react\";\r\nimport \"./dialogsItems.css\"\r\nimport {FriendsListType} from \"../../../../Redux/dialogs-reducer\";\r\nimport {profileType} from \"../../../../type/type\";\r\nimport {CloseOutlined, SearchOutlined} from \"@ant-design/icons\"\r\nimport photo from \"../../../../axios/images/user.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\ntype PropsType = {\r\n    PublicChannels: Array<FriendsListType>\r\n    profile: profileType | null\r\n    active:boolean\r\n    setActiveListMessages:(body:boolean)=>void\r\n}\r\nconst DialogsItems: FC<PropsType> = ({\r\n                                         profile, PublicChannels,active,\r\n                                         setActiveListMessages\r\n                                     }) => {\r\n    \r\n\r\n\r\n\r\n    const setActiveShowListMessages = () => {\r\n        setActiveListMessages(!active)\r\n    }\r\n\r\n\r\n\r\n    const ArrPublicChannels = PublicChannels.map(d =>\r\n        <NavLink key={d.id} to={\"/dialogs/\" + d.id} className=\"dialogsItems__friends\"\r\n                 onClick={setActiveShowListMessages}>\r\n            <div className=\"dialogsItems__friends__avatar\">\r\n                <img src={d.src} alt=''/>\r\n            </div>\r\n            <div className=\"dialogsItems__friends__profile\">\r\n                <h3>{d.name}</h3>\r\n                <p>{d.worked}</p>\r\n            </div>\r\n            <div className=\"dialogsItems__friends_timeMessage\">\r\n                <p>{d.timeHouse}:{d.timeMin} min</p>\r\n            </div>\r\n        </NavLink>)\r\n\r\n\r\n    return (\r\n        <div className={active? 'dialogsItems__wrapper active' : 'dialogsItems__wrapper'} onClick={setActiveShowListMessages}>\r\n            <div className='dialogsItems__blur'/>\r\n            <div className=\"dialogsItems__content\" onClick={e => e.stopPropagation()}>\r\n                <div className=\"dialogsItems__authUser\">\r\n                    <div className=\"dialogsItems__authProfile\">\r\n                        <div className=\"dialogsItems__authProfile__avatar\">\r\n                            <img src={profile?.photos.large || photo}/>\r\n                        </div>\r\n                        <div className=\"dialogsItems__authProfile__profile\">\r\n                            <h3>{profile?.fullName}</h3>\r\n                            <p>{profile?.lookingForAJobDescription}</p>\r\n                        </div>\r\n                        <div className=\"dialogsItems__authProfile__closedBlock\">\r\n                            <CloseOutlined style={{fontSize: '25px'}}\r\n                                           onClick={setActiveShowListMessages}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"dialogsItems__search\">\r\n                        <div className=\"dialogsItems__search__iconic\">\r\n                            <SearchOutlined style={{fontSize: '25px', color: '#08c'}}/>\r\n                        </div>\r\n                        <input type=\"text\" className=\"dialogsItems__dialog_search1\"\r\n                               placeholder=\"Search...\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dialogsItems__public\">\r\n                    <div><h3>Public Channels</h3></div>\r\n                    <div className=\"dialogsItems__listFriends\">\r\n                        {ArrPublicChannels}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsItems;","import React from \"react\";\r\nimport dialogsItems from \"./dialogsItems\";\r\nimport {connect} from \"react-redux\";\r\nimport {appStateType} from \"../../../../Redux/redux-store\";\r\nimport {profileType} from \"../../../../type/type\";\r\nimport {actions, FriendsListType} from \"../../../../Redux/dialogs-reducer\";\r\n\r\n\r\n\r\ntype MapStatePropsType={\r\n    PublicChannels: Array <FriendsListType>\r\n    profile: profileType|null\r\n    active:boolean\r\n}\r\nlet mapStateToProps = (state:appStateType) => {\r\n    return {\r\n        PublicChannels: state.dialogsPage.PublicChannels,\r\n        profile: state.postPage.profile,\r\n        active:state.dialogsPage.activeListMessages\r\n    }\r\n}\r\ntype MapDispatchPropsType = {\r\n    setActiveListMessages:(body:boolean)=>void\r\n}\r\n\r\n\r\nexport default connect <MapStatePropsType,MapDispatchPropsType,{},appStateType> (mapStateToProps,\r\n    {setActiveListMessages:actions.setActiveListMessages})(dialogsItems);","import React, {FC} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {appStateType} from \"../../Redux/redux-store\";\r\n\r\nlet mapStateToPropsForRedirect = (state:appStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\ntype MapPropsType={\r\n    isAuth:boolean\r\n}\r\n\r\n\r\nexport function withAuthRedirect <WCP>(WrappedComponent:React.ComponentType <WCP>) {//первая обертка Component который вызывает\r\n\r\n    const RedirectComponent:FC<MapPropsType >=(props:MapPropsType)=> {\r\n        let {isAuth,...restProps}=props\r\n        if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n        return <WrappedComponent {...restProps as WCP}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect<MapPropsType,{},{},appStateType>(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}// вторая обертка, что бы вызывающая сторона не прокидовалы необходимые данные для успешной работы - withAuthRedirect\r\n//если ты не авторизован перекидывает на страницу логин\r\n\r\n","// This icon file is generated automatically.\nvar SendOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M931.4 498.9L94.9 79.5c-3.4-1.7-7.3-2.1-11-1.2a15.99 15.99 0 00-11.7 19.3l86.2 352.2c1.3 5.3 5.2 9.6 10.4 11.3l147.7 50.7-147.6 50.7c-5.2 1.8-9.1 6-10.3 11.3L72.2 926.5c-.9 3.7-.5 7.6 1.2 10.9 3.9 7.9 13.5 11.1 21.5 7.2l836.5-417c3.1-1.5 5.6-4.1 7.2-7.1 3.9-8 .7-17.6-7.2-21.6zM170.8 826.3l50.3-205.6 295.2-101.3c2.3-.8 4.2-2.6 5-5 1.4-4.2-.8-8.7-5-10.2L221.1 403 171 198.2l628 314.9-628.2 313.2z\" } }] }, \"name\": \"send\", \"theme\": \"outlined\" };\nexport default SendOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SendOutlinedSvg from \"@ant-design/icons-svg/es/asn/SendOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SendOutlined = function SendOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SendOutlinedSvg\n  }));\n};\n\nSendOutlined.displayName = 'SendOutlined';\nexport default /*#__PURE__*/React.forwardRef(SendOutlined);","import React, {FC} from 'react';\r\nimport {InjectedFormProps, reduxForm, reset} from \"redux-form\";\r\nimport s from \"../messagesItems.module.css\"\r\nimport {createField, GetStringKeysType, Input} from \"../../../../common/formsControls/formsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../../utils/validations/validator\";\r\nimport {SendOutlined} from \"@ant-design/icons\";\r\n\r\n\r\nexport type addNewFormValuesType = { newMessageBody: string }\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\ntype PropsType = {}\r\nconst AddNewMessageForm: FC<InjectedFormProps<addNewFormValuesType, PropsType> & PropsType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.footerForm}>\r\n            <div className={s.footerInput}>\r\n                {createField<addNewFormValuesKeysType>('Write something here...',\r\n                    'newMessageBody', [required, maxLength100], Input)}\r\n            </div>\r\n            <div className={s.footerSendButton}>\r\n                <button><SendOutlined style={{color:'white',fontSize:'25px'}} /></button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst afterSubmit = (result: any, dispatch: any) =>\r\n    dispatch(reset('dialogAddMessageForm'));\r\n\r\n\r\ntype addNewFormValuesKeysType = GetStringKeysType<addNewFormValuesType>\r\n\r\nconst AddMessageReduxForm = reduxForm<addNewFormValuesType,PropsType>({\r\n    form: 'dialogAddMessageForm', onSubmitSuccess: afterSubmit\r\n})(AddNewMessageForm);\r\nexport default AddMessageReduxForm\r\n\r\n\r\n\r\n\r\n","// This icon file is generated automatically.\nvar SmileOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M288 421a48 48 0 1096 0 48 48 0 10-96 0zm352 0a48 48 0 1096 0 48 48 0 10-96 0zM512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm263 711c-34.2 34.2-74 61-118.3 79.8C611 874.2 562.3 884 512 884c-50.3 0-99-9.8-144.8-29.2A370.4 370.4 0 01248.9 775c-34.2-34.2-61-74-79.8-118.3C149.8 611 140 562.3 140 512s9.8-99 29.2-144.8A370.4 370.4 0 01249 248.9c34.2-34.2 74-61 118.3-79.8C413 149.8 461.7 140 512 140c50.3 0 99 9.8 144.8 29.2A370.4 370.4 0 01775.1 249c34.2 34.2 61 74 79.8 118.3C874.2 413 884 461.7 884 512s-9.8 99-29.2 144.8A368.89 368.89 0 01775 775zM664 533h-48.1c-4.2 0-7.8 3.2-8.1 7.4C604 589.9 562.5 629 512 629s-92.1-39.1-95.8-88.6c-.3-4.2-3.9-7.4-8.1-7.4H360a8 8 0 00-8 8.4c4.4 84.3 74.5 151.6 160 151.6s155.6-67.3 160-151.6a8 8 0 00-8-8.4z\" } }] }, \"name\": \"smile\", \"theme\": \"outlined\" };\nexport default SmileOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SmileOutlinedSvg from \"@ant-design/icons-svg/es/asn/SmileOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SmileOutlined = function SmileOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SmileOutlinedSvg\n  }));\n};\n\nSmileOutlined.displayName = 'SmileOutlined';\nexport default /*#__PURE__*/React.forwardRef(SmileOutlined);","// This icon file is generated automatically.\nvar MessageOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 512a48 48 0 1096 0 48 48 0 10-96 0zm200 0a48 48 0 1096 0 48 48 0 10-96 0zm-400 0a48 48 0 1096 0 48 48 0 10-96 0zm661.2-173.6c-22.6-53.7-55-101.9-96.3-143.3a444.35 444.35 0 00-143.3-96.3C630.6 75.7 572.2 64 512 64h-2c-60.6.3-119.3 12.3-174.5 35.9a445.35 445.35 0 00-142 96.5c-40.9 41.3-73 89.3-95.2 142.8-23 55.4-34.6 114.3-34.3 174.9A449.4 449.4 0 00112 714v152a46 46 0 0046 46h152.1A449.4 449.4 0 00510 960h2.1c59.9 0 118-11.6 172.7-34.3a444.48 444.48 0 00142.8-95.2c41.3-40.9 73.8-88.7 96.5-142 23.6-55.2 35.6-113.9 35.9-174.5.3-60.9-11.5-120-34.8-175.6zm-151.1 438C704 845.8 611 884 512 884h-1.7c-60.3-.3-120.2-15.3-173.1-43.5l-8.4-4.5H188V695.2l-4.5-8.4C155.3 633.9 140.3 574 140 513.7c-.4-99.7 37.7-193.3 107.6-263.8 69.8-70.5 163.1-109.5 262.8-109.9h1.7c50 0 98.5 9.7 144.2 28.9 44.6 18.7 84.6 45.6 119 80 34.3 34.3 61.3 74.4 80 119 19.4 46.2 29.1 95.2 28.9 145.8-.6 99.6-39.7 192.9-110.1 262.7z\" } }] }, \"name\": \"message\", \"theme\": \"outlined\" };\nexport default MessageOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MessageOutlinedSvg from \"@ant-design/icons-svg/es/asn/MessageOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MessageOutlined = function MessageOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MessageOutlinedSvg\n  }));\n};\n\nMessageOutlined.displayName = 'MessageOutlined';\nexport default /*#__PURE__*/React.forwardRef(MessageOutlined);","import React, {FC, useEffect, useState} from \"react\";\nimport s from \"./messagesItems.module.css\"\nimport AddMessageReduxForm, {addNewFormValuesType} from \"./AddMessageForm/AddMessageForm\";\nimport {PropsTypes} from \"./MessagesItemsContainer\";\nimport {AlignRightOutlined, SmileOutlined, MessageOutlined} from \"@ant-design/icons\";\nimport {useParams} from \"react-router-dom\";\nimport cn from \"classnames\";\nimport {PaperClipOutlined} from \"@ant-design/icons/lib\";\n\n\nconst MessagesItems: FC<PropsTypes> = ({\n                                           messages, dialogsIcons,\n                                           addSendActionCreator, activeListMessages, setActiveListMessages,\n                                           PublicChannels\n                                       }) => {\n//этот флажок, служит для показа Списка сообщений друзей в по клику скрывается и показывается, через стор true/false идет\n\n\n    const SetActiveShowList = () => {\n        setActiveListMessages(!activeListMessages)\n    }\n\n\n    const {userId}: any = useParams()\n\n    const [user, setUser]: any = useState(null)\n\n    const userSelect: any = PublicChannels.find(item => item.id == userId)\n\n    useEffect(() => {\n        if (typeof userSelect !== 'undefined') setUser(userSelect)\n    }, [userSelect])\n\n\n    let Chat = messages.map((m: any) => {\n        return <div key={m.id} className={cn({\n            [s.messageLeft]: m.name === 1\n        }, s.messageRight)}>\n            <div>\n                <div className={cn({\n                    [s.messageLeftColor]: m.name === 1\n                }, s.messageRightColor)}\n                >{m.message}</div>\n                <div><h4>{m.time}</h4></div>\n            </div>\n        </div>\n    })\n\n\n    let addNewDialogs = (values: addNewFormValuesType) => {\n        addSendActionCreator(values.newMessageBody);\n    }\n\n    const arrHeaderIcons = dialogsIcons.map(i => {\n        return <div className={s.message_header_Icon} key={i.id}>\n            <img src={i.src}/>\n        </div>\n    })\n\n    if (user != null) {\n        return (\n            <div className={s.messages}>\n                <div className={s.messageHeader}>\n                    <div className={s.messageHeader__avatarName}>\n                        <div className={s.message_burger}>\n                            <AlignRightOutlined style={{fontSize: '20px', color: '#08c'}}\n                                                onClick={SetActiveShowList}\n                            />\n                        </div>\n                        <div className={s.messageHeader__avatar}>\n                            <img src={user.src}/></div>\n                        <div className={s.messageHeader__name}>\n                            <h4>{user.name}</h4>\n                            <div>{user.worked}</div>\n                        </div>\n                    </div>\n                    <div className={s.message_header_icons}>\n                        {arrHeaderIcons}\n                    </div>\n                </div>\n                <div className={s.messageContent}>\n                    {Chat}\n                </div>\n                <div className={s.messageFooter}>\n                    <div className={s.footerIcons}>\n                        <div><SmileOutlined style={{fontSize: '25px'}}/></div>\n                        <div><PaperClipOutlined style={{fontSize: '25px'}}/></div>\n                    </div>\n                    <div><AddMessageReduxForm onSubmit={addNewDialogs}/></div>\n                </div>\n            </div>\n        )\n    }\n\n\n    return (\n        <div className={s.messagesEmpty}>\n            <div className={s.messagesEmptyBlock}>\n                 <MessageOutlined style={{fontSize: '5em', color: 'white'}}\n                                                  onClick={SetActiveShowList}\n                />\n                <h3>Select user from list!</h3>\n            </div>\n        </div>\n    )\n\n\n}\n\nexport default MessagesItems;\n","import React from \"react\";\r\nimport {\r\n    dialogsIconType, FriendsListType,\r\n    messagesType\r\n} from \"../../../../Redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport MessagesItems from \"./messagesItems\";\r\nimport {appStateType} from \"../../../../Redux/redux-store\";\r\nimport {actions} from \"../../../../Redux/dialogs-reducer\";\r\n\r\ntype MapStatePropsType = {\r\n    PublicChannels: Array<FriendsListType>\r\n    messages: Array<messagesType>,\r\n    dialogsIcons: Array<dialogsIconType>\r\n    activeListMessages:boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    addSendActionCreator:(newMessage:string)=>void\r\n    setActiveListMessages:(body:boolean)=>void\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: appStateType): MapStatePropsType => {\r\n    return {\r\n        PublicChannels: state.dialogsPage.PublicChannels,\r\n        messages: state.dialogsPage.messages,\r\n        dialogsIcons: state.dialogsPage.dialogsIcons,\r\n        activeListMessages:state.dialogsPage.activeListMessages,\r\n\r\n    }\r\n}\r\nexport type PropsTypes=MapDispatchPropsType & MapStatePropsType\r\n\r\nexport default compose<React.ComponentType>( withAuthRedirect,\r\n    connect <MapStatePropsType,MapDispatchPropsType ,{},appStateType> (mapStateToProps,\r\n        {addSendActionCreator:actions.addSendActionCreator,\r\n            setActiveListMessages:actions.setActiveListMessages\r\n        }))(MessagesItems);\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogsItemsContainer from \"./Chat/Dialogs_items/DialogsItemsContainer\";\r\nimport MessagesItemsContainer from \"./Chat/Messages_items/MessagesItemsContainer\";\r\n\r\n\r\nconst Dialogs = () => {\r\n\r\n    return (\r\n           <div className={s.dialogs}>\r\n               <DialogsItemsContainer/>\r\n               <MessagesItemsContainer/>\r\n           </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n"],"sourceRoot":""}